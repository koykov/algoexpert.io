{
	"questions": [
		{
			"uid": "palindrome-check",
			"type": "CODING_STANDARD",
			"name": "Palindrome Check",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Strings",
			"difficulty": 1
		},
		{
			"uid": "caesar-cipher-encryptor",
			"type": "CODING_STANDARD",
			"name": "Caesar Cipher Encryptor",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Strings",
			"difficulty": 1
		},
		{
			"uid": "longest-palindromic-substring",
			"type": "CODING_STANDARD",
			"name": "Longest Palindromic Substring",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Strings",
			"difficulty": 2
		},
		{
			"uid": "longest-substring-without-duplication",
			"type": "CODING_STANDARD",
			"name": "Longest Substring Without Duplication",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Strings",
			"difficulty": 3
		},
		{
			"uid": "underscorify-substring",
			"type": "CODING_STANDARD",
			"name": "Underscorify Substring",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Strings",
			"difficulty": 3
		},
		{
			"uid": "pattern-matcher",
			"type": "CODING_STANDARD",
			"name": "Pattern Matcher",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Strings",
			"difficulty": 3
		},
		{
			"uid": "group-anagrams",
			"type": "CODING_STANDARD",
			"name": "Group Anagrams",
			"releaseDate": "2019-11-21T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Strings",
			"difficulty": 2
		},
		{
			"uid": "smallest-substring-containing",
			"type": "CODING_STANDARD",
			"name": "Smallest Substring Containing",
			"releaseDate": "2019-11-21T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Strings",
			"difficulty": 4
		},
		{
			"uid": "run-length-encoding",
			"type": "CODING_STANDARD",
			"name": "Run-Length Encoding",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Strings",
			"difficulty": 1
		},
		{
			"uid": "longest-balanced-substring",
			"type": "CODING_STANDARD",
			"name": "Longest Balanced Substring",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Strings",
			"difficulty": 4
		},
		{
			"uid": "valid-ip-addresses",
			"type": "CODING_STANDARD",
			"name": "Valid IP Addresses",
			"releaseDate": "2020-12-23T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Strings",
			"difficulty": 2
		},
		{
			"uid": "reverse-words-in-string",
			"type": "CODING_STANDARD",
			"name": "Reverse Words In String",
			"releaseDate": "2021-01-31T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Strings",
			"difficulty": 2
		},
		{
			"uid": "common-characters",
			"type": "CODING_STANDARD",
			"name": "Common Characters",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Strings",
			"difficulty": 1
		},
		{
			"uid": "generate-document",
			"type": "CODING_STANDARD",
			"name": "Generate Document",
			"releaseDate": "2021-03-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Strings",
			"difficulty": 1
		},
		{
			"uid": "first-non-repeating-character",
			"type": "CODING_STANDARD",
			"name": "First Non-Repeating Character",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Strings",
			"difficulty": 1
		},
		{
			"uid": "minimum-characters-for-words",
			"type": "CODING_STANDARD",
			"name": "Minimum Characters For Words",
			"releaseDate": "2021-05-17T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Strings",
			"difficulty": 2
		},
		{
			"uid": "bubble-sort",
			"type": "CODING_STANDARD",
			"name": "Bubble Sort",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Sorting",
			"difficulty": 1
		},
		{
			"uid": "insertion-sort",
			"type": "CODING_STANDARD",
			"name": "Insertion Sort",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Sorting",
			"difficulty": 1
		},
		{
			"uid": "selection-sort",
			"type": "CODING_STANDARD",
			"name": "Selection Sort",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Sorting",
			"difficulty": 1
		},
		{
			"uid": "merge-sort",
			"type": "CODING_STANDARD",
			"name": "Merge Sort",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Sorting",
			"difficulty": 4
		},
		{
			"uid": "quick-sort",
			"type": "CODING_STANDARD",
			"name": "Quick Sort",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Sorting",
			"difficulty": 3
		},
		{
			"uid": "heap-sort",
			"type": "CODING_STANDARD",
			"name": "Heap Sort",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Sorting",
			"difficulty": 3
		},
		{
			"uid": "three-number-sort",
			"type": "CODING_STANDARD",
			"name": "Three Number Sort",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Sorting",
			"difficulty": 2
		},
		{
			"uid": "count-inversions",
			"type": "CODING_STANDARD",
			"name": "Count Inversions",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Sorting",
			"difficulty": 4
		},
		{
			"uid": "radix-sort",
			"type": "CODING_STANDARD",
			"name": "Radix Sort",
			"releaseDate": "2021-04-14T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Sorting",
			"difficulty": 3
		},
		{
			"uid": "depth-first-search",
			"type": "CODING_STANDARD",
			"name": "Depth-first Search",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Graphs",
			"difficulty": 1
		},
		{
			"uid": "single-cycle-check",
			"type": "CODING_STANDARD",
			"name": "Single Cycle Check",
			"releaseDate": "2019-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Graphs",
			"difficulty": 2
		},
		{
			"uid": "breadth-first-search",
			"type": "CODING_STANDARD",
			"name": "Breadth-first Search",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Graphs",
			"difficulty": 2
		},
		{
			"uid": "river-sizes",
			"type": "CODING_STANDARD",
			"name": "River Sizes",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": true,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Graphs",
			"difficulty": 2
		},
		{
			"uid": "boggle-board",
			"type": "CODING_STANDARD",
			"name": "Boggle Board",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Graphs",
			"difficulty": 3
		},
		{
			"uid": "youngest-common-ancestor",
			"type": "CODING_STANDARD",
			"name": "Youngest Common Ancestor",
			"releaseDate": "2019-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Graphs",
			"difficulty": 2
		},
		{
			"uid": "rectangle-mania",
			"type": "CODING_STANDARD",
			"name": "Rectangle Mania",
			"releaseDate": "2019-09-13T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Graphs",
			"difficulty": 4
		},
		{
			"uid": "remove-islands",
			"type": "CODING_STANDARD",
			"name": "Remove Islands",
			"releaseDate": "2020-12-23T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Graphs",
			"difficulty": 2
		},
		{
			"uid": "cycle-in-graph",
			"type": "CODING_STANDARD",
			"name": "Cycle In Graph",
			"releaseDate": "2021-01-19T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Graphs",
			"difficulty": 2
		},
		{
			"uid": "detect-arbitrage",
			"type": "CODING_STANDARD",
			"name": "Detect Arbitrage",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Graphs",
			"difficulty": 4
		},
		{
			"uid": "two-edge-connected-graph",
			"type": "CODING_STANDARD",
			"name": "Two-Edge-Connected Graph",
			"releaseDate": "2021-05-17T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Graphs",
			"difficulty": 4
		},
		{
			"uid": "minimum-passes-of-matrix",
			"type": "CODING_STANDARD",
			"name": "Minimum Passes Of Matrix",
			"releaseDate": "2021-05-17T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Graphs",
			"difficulty": 2
		},
		{
			"uid": "min-max-stack-construction",
			"type": "CODING_STANDARD",
			"name": "Min Max Stack Construction",
			"releaseDate": "2018-10-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Stacks",
			"difficulty": 2
		},
		{
			"uid": "balanced-brackets",
			"type": "CODING_STANDARD",
			"name": "Balanced Brackets",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Stacks",
			"difficulty": 2
		},
		{
			"uid": "shorten-path",
			"type": "CODING_STANDARD",
			"name": "Shorten Path",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Stacks",
			"difficulty": 3
		},
		{
			"uid": "sunset-views",
			"type": "CODING_STANDARD",
			"name": "Sunset Views",
			"releaseDate": "2020-12-23T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Stacks",
			"difficulty": 2
		},
		{
			"uid": "largest-rectangle-under-skyline",
			"type": "CODING_STANDARD",
			"name": "Largest Rectangle Under Skyline",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Stacks",
			"difficulty": 3
		},
		{
			"uid": "best-digits",
			"type": "CODING_STANDARD",
			"name": "Best Digits",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Stacks",
			"difficulty": 2
		},
		{
			"uid": "sort-stack",
			"type": "CODING_STANDARD",
			"name": "Sort Stack",
			"releaseDate": "2021-04-14T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Stacks",
			"difficulty": 2
		},
		{
			"uid": "next-greater-element",
			"type": "CODING_STANDARD",
			"name": "Next Greater Element",
			"releaseDate": "2021-05-17T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Stacks",
			"difficulty": 2
		},
		{
			"uid": "suffix-trie-construction",
			"type": "CODING_STANDARD",
			"name": "Suffix Trie Construction",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Tries",
			"difficulty": 2
		},
		{
			"uid": "multi-string-search",
			"type": "CODING_STANDARD",
			"name": "Multi String Search",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Tries",
			"difficulty": 3
		},
		{
			"uid": "linked-list-construction",
			"type": "CODING_STANDARD",
			"name": "Linked List Construction",
			"releaseDate": "2018-10-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Linked Lists",
			"difficulty": 2
		},
		{
			"uid": "remove-kth-node-from-end",
			"type": "CODING_STANDARD",
			"name": "Remove Kth Node From End",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Linked Lists",
			"difficulty": 2
		},
		{
			"uid": "find-loop",
			"type": "CODING_STANDARD",
			"name": "Find Loop",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Linked Lists",
			"difficulty": 3
		},
		{
			"uid": "lru-cache",
			"type": "CODING_STANDARD",
			"name": "LRU Cache",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Linked Lists",
			"difficulty": 4
		},
		{
			"uid": "reverse-linked-list",
			"type": "CODING_STANDARD",
			"name": "Reverse Linked List",
			"releaseDate": "2019-09-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Linked Lists",
			"difficulty": 3
		},
		{
			"uid": "merge-linked-lists",
			"type": "CODING_STANDARD",
			"name": "Merge Linked Lists",
			"releaseDate": "2019-11-21T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Linked Lists",
			"difficulty": 3
		},
		{
			"uid": "shift-linked-list",
			"type": "CODING_STANDARD",
			"name": "Shift Linked List",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": true,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Linked Lists",
			"difficulty": 3
		},
		{
			"uid": "rearrange-linked-list",
			"type": "CODING_STANDARD",
			"name": "Rearrange Linked List",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Linked Lists",
			"difficulty": 4
		},
		{
			"uid": "linked-list-palindrome",
			"type": "CODING_STANDARD",
			"name": "Linked List Palindrome",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Linked Lists",
			"difficulty": 4
		},
		{
			"uid": "remove-duplicates-from-linked-list",
			"type": "CODING_STANDARD",
			"name": "Remove Duplicates From Linked List",
			"releaseDate": "2021-01-31T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Linked Lists",
			"difficulty": 1
		},
		{
			"uid": "sum-of-linked-lists",
			"type": "CODING_STANDARD",
			"name": "Sum of Linked Lists",
			"releaseDate": "2021-02-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Linked Lists",
			"difficulty": 2
		},
		{
			"uid": "zip-linked-list",
			"type": "CODING_STANDARD",
			"name": "Zip Linked List",
			"releaseDate": "2021-03-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Linked Lists",
			"difficulty": 4
		},
		{
			"uid": "node-swap",
			"type": "CODING_STANDARD",
			"name": "Node Swap",
			"releaseDate": "2021-04-14T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Linked Lists",
			"difficulty": 4
		},
		{
			"uid": "min-heap-construction",
			"type": "CODING_STANDARD",
			"name": "Min Heap Construction",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Heaps",
			"difficulty": 2
		},
		{
			"uid": "continuous-median",
			"type": "CODING_STANDARD",
			"name": "Continuous Median",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Heaps",
			"difficulty": 3
		},
		{
			"uid": "merge-sorted-arrays",
			"type": "CODING_STANDARD",
			"name": "Merge Sorted Arrays",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Heaps",
			"difficulty": 4
		},
		{
			"uid": "sort-k-sorted-array",
			"type": "CODING_STANDARD",
			"name": "Sort K-Sorted Array",
			"releaseDate": "2021-01-19T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Heaps",
			"difficulty": 3
		},
		{
			"uid": "laptop-rentals",
			"type": "CODING_STANDARD",
			"name": "Laptop Rentals",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Heaps",
			"difficulty": 3
		},
		{
			"uid": "branch-sums",
			"type": "CODING_STANDARD",
			"name": "Branch Sums",
			"releaseDate": "2019-11-21T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Trees",
			"difficulty": 1
		},
		{
			"uid": "node-depths",
			"type": "CODING_STANDARD",
			"name": "Node Depths",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Trees",
			"difficulty": 1
		},
		{
			"uid": "invert-binary-tree",
			"type": "CODING_STANDARD",
			"name": "Invert Binary Tree",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Trees",
			"difficulty": 2
		},
		{
			"uid": "binary-tree-diameter",
			"type": "CODING_STANDARD",
			"name": "Binary Tree Diameter",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Binary Trees",
			"difficulty": 2
		},
		{
			"uid": "max-path-sum-in-binary-tree",
			"type": "CODING_STANDARD",
			"name": "Max Path Sum In Binary Tree",
			"releaseDate": "2018-10-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Trees",
			"difficulty": 3
		},
		{
			"uid": "iterative-in-order-traversal",
			"type": "CODING_STANDARD",
			"name": "Iterative In-order Traversal",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Trees",
			"difficulty": 4
		},
		{
			"uid": "flatten-binary-tree",
			"type": "CODING_STANDARD",
			"name": "Flatten Binary Tree",
			"releaseDate": "2020-03-29T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Trees",
			"difficulty": 4
		},
		{
			"uid": "right-sibling-tree",
			"type": "CODING_STANDARD",
			"name": "Right Sibling Tree",
			"releaseDate": "2020-03-29T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Trees",
			"difficulty": 4
		},
		{
			"uid": "all-kinds-of-node-depths",
			"type": "CODING_STANDARD",
			"name": "All Kinds Of Node Depths",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Trees",
			"difficulty": 4
		},
		{
			"uid": "find-successor",
			"type": "CODING_STANDARD",
			"name": "Find Successor",
			"releaseDate": "2020-12-23T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Binary Trees",
			"difficulty": 2
		},
		{
			"uid": "find-nodes-distance-k",
			"type": "CODING_STANDARD",
			"name": "Find Nodes Distance K",
			"releaseDate": "2021-01-31T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Binary Trees",
			"difficulty": 3
		},
		{
			"uid": "height-balanced-binary-tree",
			"type": "CODING_STANDARD",
			"name": "Height Balanced Binary Tree",
			"releaseDate": "2021-02-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Binary Trees",
			"difficulty": 2
		},
		{
			"uid": "compare-leaf-traversal",
			"type": "CODING_STANDARD",
			"name": "Compare Leaf Traversal",
			"releaseDate": "2021-05-17T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Binary Trees",
			"difficulty": 4
		},
		{
			"uid": "merge-binary-trees",
			"type": "CODING_STANDARD",
			"name": "Merge Binary Trees",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Binary Trees",
			"difficulty": 2
		},
		{
			"uid": "find-closest-value-in-bst",
			"type": "CODING_STANDARD",
			"name": "Find Closest Value In BST",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Search Trees",
			"difficulty": 1
		},
		{
			"uid": "bst-construction",
			"type": "CODING_STANDARD",
			"name": "BST Construction",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Search Trees",
			"difficulty": 2
		},
		{
			"uid": "validate-bst",
			"type": "CODING_STANDARD",
			"name": "Validate BST",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Search Trees",
			"difficulty": 2
		},
		{
			"uid": "bst-traversal",
			"type": "CODING_STANDARD",
			"name": "BST Traversal",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Search Trees",
			"difficulty": 2
		},
		{
			"uid": "same-bsts",
			"type": "CODING_STANDARD",
			"name": "Same BSTs",
			"releaseDate": "2019-11-21T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Search Trees",
			"difficulty": 3
		},
		{
			"uid": "min-height-bst",
			"type": "CODING_STANDARD",
			"name": "Min Height BST",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Search Trees",
			"difficulty": 2
		},
		{
			"uid": "right-smaller-than",
			"type": "CODING_STANDARD",
			"name": "Right Smaller Than",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Binary Search Trees",
			"difficulty": 4
		},
		{
			"uid": "find-kth-largest-value-in-bst",
			"type": "CODING_STANDARD",
			"name": "Find Kth Largest Value In BST",
			"releaseDate": "2021-02-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Binary Search Trees",
			"difficulty": 2
		},
		{
			"uid": "reconstruct-bst",
			"type": "CODING_STANDARD",
			"name": "Reconstruct BST",
			"releaseDate": "2021-02-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Binary Search Trees",
			"difficulty": 2
		},
		{
			"uid": "validate-three-nodes",
			"type": "CODING_STANDARD",
			"name": "Validate Three Nodes",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Binary Search Trees",
			"difficulty": 3
		},
		{
			"uid": "two-number-sum",
			"type": "CODING_STANDARD",
			"name": "Two Number Sum",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 1
		},
		{
			"uid": "three-number-sum",
			"type": "CODING_STANDARD",
			"name": "Three Number Sum",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "four-number-sum",
			"type": "CODING_STANDARD",
			"name": "Four Number Sum",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 3
		},
		{
			"uid": "smallest-difference",
			"type": "CODING_STANDARD",
			"name": "Smallest Difference",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "subarray-sort",
			"type": "CODING_STANDARD",
			"name": "Subarray Sort",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 3
		},
		{
			"uid": "largest-range",
			"type": "CODING_STANDARD",
			"name": "Largest Range",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 3
		},
		{
			"uid": "min-rewards",
			"type": "CODING_STANDARD",
			"name": "Min Rewards",
			"releaseDate": "2019-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 3
		},
		{
			"uid": "zigzag-traverse",
			"type": "CODING_STANDARD",
			"name": "Zigzag Traverse",
			"releaseDate": "2019-09-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 3
		},
		{
			"uid": "apartment-hunting",
			"type": "CODING_STANDARD",
			"name": "Apartment Hunting",
			"releaseDate": "2019-09-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 4
		},
		{
			"uid": "calendar-matching",
			"type": "CODING_STANDARD",
			"name": "Calendar Matching",
			"releaseDate": "2019-09-13T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 4
		},
		{
			"uid": "move-element-to-end",
			"type": "CODING_STANDARD",
			"name": "Move Element To End",
			"releaseDate": "2019-11-21T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "monotonic-array",
			"type": "CODING_STANDARD",
			"name": "Monotonic Array",
			"releaseDate": "2020-03-29T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "spiral-traverse",
			"type": "CODING_STANDARD",
			"name": "Spiral Traverse",
			"releaseDate": "2020-03-29T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "longest-peak",
			"type": "CODING_STANDARD",
			"name": "Longest Peak",
			"releaseDate": "2020-03-29T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "validate-subsequence",
			"type": "CODING_STANDARD",
			"name": "Validate Subsequence",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": true,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Arrays",
			"difficulty": 1
		},
		{
			"uid": "array-of-products",
			"type": "CODING_STANDARD",
			"name": "Array Of Products",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "waterfall-streams",
			"type": "CODING_STANDARD",
			"name": "Waterfall Streams",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 4
		},
		{
			"uid": "first-duplicate-value",
			"type": "CODING_STANDARD",
			"name": "First Duplicate Value",
			"releaseDate": "2020-12-23T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "sorted-squared-array",
			"type": "CODING_STANDARD",
			"name": "Sorted Squared Array",
			"releaseDate": "2021-03-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 1
		},
		{
			"uid": "minimum-area-rectangle",
			"type": "CODING_STANDARD",
			"name": "Minimum Area Rectangle",
			"releaseDate": "2021-01-31T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 4
		},
		{
			"uid": "merge-overlapping-intervals",
			"type": "CODING_STANDARD",
			"name": "Merge Overlapping Intervals",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "tournament-winner",
			"type": "CODING_STANDARD",
			"name": "Tournament Winner",
			"releaseDate": "2021-02-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 1
		},
		{
			"uid": "non-constructible-change",
			"type": "CODING_STANDARD",
			"name": "Non-Constructible Change",
			"releaseDate": "2021-02-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 1
		},
		{
			"uid": "best-seat",
			"type": "CODING_STANDARD",
			"name": "Best Seat",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "longest-subarray-with-sum",
			"type": "CODING_STANDARD",
			"name": "Longest Subarray With Sum",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 3
		},
		{
			"uid": "line-through-points",
			"type": "CODING_STANDARD",
			"name": "Line Through Points",
			"releaseDate": "2021-03-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Arrays",
			"difficulty": 4
		},
		{
			"uid": "kadane's-algorithm",
			"type": "CODING_STANDARD",
			"name": "Kadane's Algorithm",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Famous Algorithms",
			"difficulty": 2
		},
		{
			"uid": "knuth-morris-pratt-algorithm",
			"type": "CODING_STANDARD",
			"name": "Knuth—Morris—Pratt Algorithm",
			"releaseDate": "2018-10-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Famous Algorithms",
			"difficulty": 4
		},
		{
			"uid": "dijkstra's-algorithm",
			"type": "CODING_STANDARD",
			"name": "Dijkstra's Algorithm",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Famous Algorithms",
			"difficulty": 3
		},
		{
			"uid": "a*-algorithm",
			"type": "CODING_STANDARD",
			"name": "A* Algorithm",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Famous Algorithms",
			"difficulty": 4
		},
		{
			"uid": "topological-sort",
			"type": "CODING_STANDARD",
			"name": "Topological Sort",
			"releaseDate": "2018-10-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Famous Algorithms",
			"difficulty": 3
		},
		{
			"uid": "minimum-waiting-time",
			"type": "CODING_STANDARD",
			"name": "Minimum Waiting Time",
			"releaseDate": "2021-01-19T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Greedy Algorithms",
			"difficulty": 1
		},
		{
			"uid": "task-assignment",
			"type": "CODING_STANDARD",
			"name": "Task Assignment",
			"releaseDate": "2021-01-19T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Greedy Algorithms",
			"difficulty": 2
		},
		{
			"uid": "valid-starting-city",
			"type": "CODING_STANDARD",
			"name": "Valid Starting City",
			"releaseDate": "2021-01-31T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Greedy Algorithms",
			"difficulty": 2
		},
		{
			"uid": "class-photos",
			"type": "CODING_STANDARD",
			"name": "Class Photos",
			"releaseDate": "2021-02-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Greedy Algorithms",
			"difficulty": 1
		},
		{
			"uid": "tandem-bicycle",
			"type": "CODING_STANDARD",
			"name": "Tandem Bicycle",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Greedy Algorithms",
			"difficulty": 1
		},
		{
			"uid": "nth-fibonacci",
			"type": "CODING_STANDARD",
			"name": "Nth Fibonacci",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Recursion",
			"difficulty": 1
		},
		{
			"uid": "permutations",
			"type": "CODING_STANDARD",
			"name": "Permutations",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Recursion",
			"difficulty": 2
		},
		{
			"uid": "powerset",
			"type": "CODING_STANDARD",
			"name": "Powerset",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Recursion",
			"difficulty": 2
		},
		{
			"uid": "number-of-binary-tree-topologies",
			"type": "CODING_STANDARD",
			"name": "Number Of Binary Tree Topologies",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Recursion",
			"difficulty": 4
		},
		{
			"uid": "lowest-common-manager",
			"type": "CODING_STANDARD",
			"name": "Lowest Common Manager",
			"releaseDate": "2019-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Recursion",
			"difficulty": 3
		},
		{
			"uid": "product-sum",
			"type": "CODING_STANDARD",
			"name": "Product Sum",
			"releaseDate": "2019-09-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Recursion",
			"difficulty": 1
		},
		{
			"uid": "interweaving-strings",
			"type": "CODING_STANDARD",
			"name": "Interweaving Strings",
			"releaseDate": "2019-11-21T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Recursion",
			"difficulty": 3
		},
		{
			"uid": "phone-number-mnemonics",
			"type": "CODING_STANDARD",
			"name": "Phone Number Mnemonics",
			"releaseDate": "2021-01-19T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Recursion",
			"difficulty": 2
		},
		{
			"uid": "staircase-traversal",
			"type": "CODING_STANDARD",
			"name": "Staircase Traversal",
			"releaseDate": "2021-02-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Recursion",
			"difficulty": 2
		},
		{
			"uid": "solve-sudoku",
			"type": "CODING_STANDARD",
			"name": "Solve Sudoku",
			"releaseDate": "2021-02-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Recursion",
			"difficulty": 3
		},
		{
			"uid": "generate-div-tags",
			"type": "CODING_STANDARD",
			"name": "Generate Div Tags",
			"releaseDate": "2021-03-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Recursion",
			"difficulty": 3
		},
		{
			"uid": "ambiguous-measurements",
			"type": "CODING_STANDARD",
			"name": "Ambiguous Measurements",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Recursion",
			"difficulty": 3
		},
		{
			"uid": "non-attacking-queens",
			"type": "CODING_STANDARD",
			"name": "Non-Attacking Queens",
			"releaseDate": "2021-04-14T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Recursion",
			"difficulty": 4
		},
		{
			"uid": "max-subset-sum-no-adjacent",
			"type": "CODING_STANDARD",
			"name": "Max Subset Sum No Adjacent",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 2
		},
		{
			"uid": "number-of-ways-to-make-change",
			"type": "CODING_STANDARD",
			"name": "Number Of Ways To Make Change",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 2
		},
		{
			"uid": "min-number-of-coins-for-change",
			"type": "CODING_STANDARD",
			"name": "Min Number Of Coins For Change",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 2
		},
		{
			"uid": "max-sum-increasing-subsequence",
			"type": "CODING_STANDARD",
			"name": "Max Sum Increasing Subsequence",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "levenshtein-distance",
			"type": "CODING_STANDARD",
			"name": "Levenshtein Distance",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 2
		},
		{
			"uid": "longest-common-subsequence",
			"type": "CODING_STANDARD",
			"name": "Longest Common Subsequence",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "min-number-of-jumps",
			"type": "CODING_STANDARD",
			"name": "Min Number Of Jumps",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "water-area",
			"type": "CODING_STANDARD",
			"name": "Water Area",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "knapsack-problem",
			"type": "CODING_STANDARD",
			"name": "Knapsack Problem",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "disk-stacking",
			"type": "CODING_STANDARD",
			"name": "Disk Stacking",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "max-profit-with-k-transactions",
			"type": "CODING_STANDARD",
			"name": "Max Profit With K Transactions",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": true,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 4
		},
		{
			"uid": "palindrome-partitioning-min-cuts",
			"type": "CODING_STANDARD",
			"name": "Palindrome Partitioning Min Cuts",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 4
		},
		{
			"uid": "longest-increasing-subsequence",
			"type": "CODING_STANDARD",
			"name": "Longest Increasing Subsequence",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 4
		},
		{
			"uid": "numbers-in-pi",
			"type": "CODING_STANDARD",
			"name": "Numbers In Pi",
			"releaseDate": "2019-09-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "longest-string-chain",
			"type": "CODING_STANDARD",
			"name": "Longest String Chain",
			"releaseDate": "2019-11-21T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 4
		},
		{
			"uid": "square-of-zeroes",
			"type": "CODING_STANDARD",
			"name": "Square of Zeroes",
			"releaseDate": "2020-05-11T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Dynamic Programming",
			"difficulty": 4
		},
		{
			"uid": "number-of-ways-to-traverse-graph",
			"type": "CODING_STANDARD",
			"name": "Number Of Ways To Traverse Graph",
			"releaseDate": "2021-02-20T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Dynamic Programming",
			"difficulty": 2
		},
		{
			"uid": "maximum-sum-submatrix",
			"type": "CODING_STANDARD",
			"name": "Maximum Sum Submatrix",
			"releaseDate": "2021-04-01T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "maximize-expression",
			"type": "CODING_STANDARD",
			"name": "Maximize Expression",
			"releaseDate": "2021-04-14T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "binary-search",
			"type": "CODING_STANDARD",
			"name": "Binary Search",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": true,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Searching",
			"difficulty": 1
		},
		{
			"uid": "find-three-largest-numbers",
			"type": "CODING_STANDARD",
			"name": "Find Three Largest Numbers",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Searching",
			"difficulty": 1
		},
		{
			"uid": "search-in-sorted-matrix",
			"type": "CODING_STANDARD",
			"name": "Search In Sorted Matrix",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Searching",
			"difficulty": 2
		},
		{
			"uid": "shifted-binary-search",
			"type": "CODING_STANDARD",
			"name": "Shifted Binary Search",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Searching",
			"difficulty": 3
		},
		{
			"uid": "search-for-range",
			"type": "CODING_STANDARD",
			"name": "Search For Range",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Searching",
			"difficulty": 3
		},
		{
			"uid": "quickselect",
			"type": "CODING_STANDARD",
			"name": "Quickselect",
			"releaseDate": "2000-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Searching",
			"difficulty": 3
		},
		{
			"uid": "index-equals-value",
			"type": "CODING_STANDARD",
			"name": "Index Equals Value",
			"releaseDate": "2020-11-16T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Tim Ruscica",
			"category": "Searching",
			"difficulty": 3
		},
		{
			"uid": "airport-connections",
			"type": "CODING_STANDARD",
			"name": "Airport Connections",
			"releaseDate": "2019-05-04T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Clement Mihailescu",
			"category": "Graphs",
			"difficulty": 4
		},
		{
			"uid": "stable-internships",
			"type": "CODING_STANDARD",
			"name": "Stable internships",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Famous Algorithms",
			"difficulty": 2
		},
		{
			"uid": "two-colorable",
			"type": "CODING_STANDARD",
			"name": "Two-Colorable",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Graphs",
			"difficulty": 2
		},
		{
			"uid": "kruskals-algorithm",
			"type": "CODING_STANDARD",
			"name": "Kruskal's Algorithm",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Famous Algorithms",
			"difficulty": 3
		},
		{
			"uid": "optimal-freelancing",
			"type": "CODING_STANDARD",
			"name": "Optimal Freelancing",
			"releaseDate": "2023-07-10T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Greedy Algorithms",
			"difficulty": 1
		},
		{
			"uid": "zero-sum-subarray",
			"type": "CODING_STANDARD",
			"name": "Zero Sum Subarray",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "semordnilap",
			"type": "CODING_STANDARD",
			"name": "Semordnilap",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Strings",
			"difficulty": 1
		},
		{
			"uid": "merging-linked-lists",
			"type": "CODING_STANDARD",
			"name": "Merging Linked Lists",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Linked Lists",
			"difficulty": 2
		},
		{
			"uid": "symmetrical-tree",
			"type": "CODING_STANDARD",
			"name": "Symmetrical Tree",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Binary Trees",
			"difficulty": 2
		},
		{
			"uid": "knight-connection",
			"type": "CODING_STANDARD",
			"name": "Knight Connection",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 3
		},
		{
			"uid": "dice-throws",
			"type": "CODING_STANDARD",
			"name": "Dice Throws",
			"releaseDate": "2023-07-10T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "count-squares",
			"type": "CODING_STANDARD",
			"name": "Count Squares",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 3
		},
		{
			"uid": "juice-bottling",
			"type": "CODING_STANDARD",
			"name": "Juice Bottling",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Dynamic Programming",
			"difficulty": 3
		},
		{
			"uid": "middle-node",
			"type": "CODING_STANDARD",
			"name": "Middle Node",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Linked Lists",
			"difficulty": 1
		},
		{
			"uid": "missingNumbers",
			"type": "CODING_STANDARD",
			"name": "Missing Numbers",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "one-edit",
			"type": "CODING_STANDARD",
			"name": "One Edit",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Strings",
			"difficulty": 2
		},
		{
			"uid": "reversePolishNotation",
			"type": "CODING_STANDARD",
			"name": "Reverse Polish Notation",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Stacks",
			"difficulty": 2
		},
		{
			"uid": "union-find",
			"type": "CODING_STANDARD",
			"name": "Union Find",
			"releaseDate": "2022-12-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Famous Algorithms",
			"difficulty": 2
		},
		{
			"uid": "largest-island",
			"type": "CODING_STANDARD",
			"name": "Largest Island",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Graphs",
			"difficulty": 3
		},
		{
			"uid": "prims-algorithm",
			"type": "CODING_STANDARD",
			"name": "Prim's Algorithm",
			"releaseDate": "2023-10-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Famous Algorithms",
			"difficulty": 3
		},
		{
			"uid": "majority-element",
			"type": "CODING_STANDARD",
			"name": "Majority Element",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "blackjack-probability",
			"type": "CODING_STANDARD",
			"name": "Blackjack Probability",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Recursion",
			"difficulty": 2
		},
		{
			"uid": "evaluate-expression-tree",
			"type": "CODING_STANDARD",
			"name": "Evaluate Expression Tree",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Binary Trees",
			"difficulty": 1
		},
		{
			"uid": "split-binary-tree",
			"type": "CODING_STANDARD",
			"name": "Split Binary Tree",
			"releaseDate": "2023-04-08T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Binary Trees",
			"difficulty": 2
		},
		{
			"uid": "colliding-asteroids",
			"type": "CODING_STANDARD",
			"name": "Colliding Asteroids",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Stacks",
			"difficulty": 2
		},
		{
			"uid": "median-of-two-sorted-arrays",
			"type": "CODING_STANDARD",
			"name": "Median Of Two Sorted Arrays",
			"releaseDate": "2023-07-10T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Searching",
			"difficulty": 4
		},
		{
			"uid": "repair-bst",
			"type": "CODING_STANDARD",
			"name": "Repair BST",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Binary Search Trees",
			"difficulty": 3
		},
		{
			"uid": "transpose-matrix",
			"type": "CODING_STANDARD",
			"name": "Transpose Matrix",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 1
		},
		{
			"uid": "reveal-minesweeper",
			"type": "CODING_STANDARD",
			"name": "Reveal Minesweeper",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Recursion",
			"difficulty": 2
		},
		{
			"uid": "sweet-and-savory",
			"type": "CODING_STANDARD",
			"name": "Sweet And Savory",
			"releaseDate": "2023-06-02T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Arrays",
			"difficulty": 2
		},
		{
			"uid": "optimalAssemblyLine",
			"type": "CODING_STANDARD",
			"name": "Optimal Assembly Line",
			"releaseDate": "2023-07-10T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Searching",
			"difficulty": 4
		},
		{
			"uid": "largest-park",
			"type": "CODING_STANDARD",
			"name": "Largest Park",
			"releaseDate": "2023-07-10T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Stacks",
			"difficulty": 4
		},
		{
			"uid": "longest-most-frequent-prefix",
			"type": "CODING_STANDARD",
			"name": "Longest Most Frequent Prefix",
			"releaseDate": "2023-10-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Tries",
			"difficulty": 3
		},
		{
			"uid": "shortest-unique-prefixes",
			"type": "CODING_STANDARD",
			"name": "Shortest Unique Prefixes",
			"releaseDate": "2023-10-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Tries",
			"difficulty": 3
		},
		{
			"uid": "strings-made-up-of-strings",
			"type": "CODING_STANDARD",
			"name": "Strings Made Up Of Strings",
			"releaseDate": "2023-10-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Tries",
			"difficulty": 4
		},
		{
			"uid": "sum-bsts",
			"type": "CODING_STANDARD",
			"name": "Sum BSTs",
			"releaseDate": "2023-10-15T00:00:00Z",
			"acl": {
				"isFree": false,
				"isFreeForStudents": false,
				"productRequired": [
					"algoexpert"
				],
				"isAvailable": true
			},
			"instructor": "Conner Ardman",
			"category": "Binary Search Trees",
			"difficulty": 3
		}
	]
}